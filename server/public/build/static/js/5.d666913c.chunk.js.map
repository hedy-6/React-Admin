{"version":3,"sources":["pages/login/LoginForm.js","pages/login/index.js"],"names":["LoginForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","onLogin","getFieldDecorator","this","react__WEBPACK_IMPORTED_MODULE_13___default","a","createElement","antd_es_form__WEBPACK_IMPORTED_MODULE_3__","onSubmit","className","Item","rules","required","message","antd_es_input__WEBPACK_IMPORTED_MODULE_5__","prefix","antd_es_icon__WEBPACK_IMPORTED_MODULE_7__","type","style","color","placeholder","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","htmlType","Component","WrappedLoginForm","create","name","Login","email","password","login","url","method","data","then","status","loginSuccess","userInfo","setCookie","history","push","loginError","antd_es_message__WEBPACK_IMPORTED_MODULE_1__","error","msg","catch","react__WEBPACK_IMPORTED_MODULE_7___default","_LoginForm__WEBPACK_IMPORTED_MODULE_9__","connect","state","dispatch","config","Promise","resolve","reject","FETCH_REQUEST","payload","LOGIN_SUCCESS","LOGIN_FAIL"],"mappings":"sOAKMA,6MACJC,aAAe,SAACC,GACdA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,eAAe,SAACC,EAAKC,GAC9BD,IACHE,QAAQC,IAAI,4BAA6BF,GACzCL,EAAKC,MAAMO,QAAQH,+EAKhB,IACCI,EAAsBC,KAAKT,MAAMC,KAAjCO,kBACR,OACEE,EAAAC,EAAAC,cAAAC,EAAA,GAAMC,SAAUL,KAAKb,aAAcmB,UAAU,cAC3CL,EAAAC,EAAAC,cAAAC,EAAA,EAAMG,KAAN,KACGR,EAAkB,QAAS,CAC1BS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCADpCX,CAGCE,EAAAC,EAAAC,cAAAQ,EAAA,GAAOC,OAAQX,EAAAC,EAAAC,cAAAU,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAAyBC,YAAY,YAG1FhB,EAAAC,EAAAC,cAAAC,EAAA,EAAMG,KAAN,KACGR,EAAkB,WAAY,CAC7BS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCADpCX,CAGCE,EAAAC,EAAAC,cAAAQ,EAAA,GAAOC,OAAQX,EAAAC,EAAAC,cAAAU,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAAyBF,KAAK,WAAWG,YAAY,eAG1GhB,EAAAC,EAAAC,cAAAC,EAAA,EAAMG,KAAN,KACEN,EAAAC,EAAAC,cAAAe,EAAA,GAAQJ,KAAK,UAAUK,SAAS,SAASb,UAAU,qBAAnD,yBA9Bcc,aAuClBC,EAAmBjB,EAAA,EAAKkB,OAAO,CAAEC,KAAM,SAApBnB,CAA+BlB,GAEzCmC,sLCtCTG,qNACF1B,QAAU,SAACH,GAAW,IACV8B,EAAoB9B,EAApB8B,MAAOC,EAAa/B,EAAb+B,SACfpC,EAAKC,MAAMoC,MAAM,CACbC,IAAK,eACLC,OAAQ,OACRC,KAAM,CACFL,QACAC,cAELK,KAAK,SAACD,GACe,OAAhBA,EAAKE,QACL1C,EAAKC,MAAM0C,aAAaH,EAAKI,UAC7BC,YAAU,CAAEV,QAAOC,aACnBpC,EAAKC,MAAM6C,QAAQC,KAAK,qBAExB/C,EAAKC,MAAM+C,WAAWR,GACtBS,EAAA,EAAQC,MAAMV,EAAKW,KAAO,+BAE/BC,MAAM,SAAAF,GACLlD,EAAKC,MAAM+C,WAAWE,GACtBD,EAAA,EAAQC,MAAMA,EAAMC,KAAO,uGAI/B,OACIE,EAAAzC,EAAAC,cAAA,OAAKG,UAAU,SACXqC,EAAAzC,EAAAC,cAAA,OAAKG,UAAU,gBACXqC,EAAAzC,EAAAC,cAAA,OAAKG,UAAU,qBAAf,yCAIJqC,EAAAzC,EAAAC,cAAA,OAAKG,UAAU,cACXqC,EAAAzC,EAAAC,cAACyC,EAAA,QAAD,CAAW9C,QAASE,KAAKF,mBAjCzBsB,cA0DLyB,sBAlBS,SAACC,GAAD,MAAY,IAGT,SAAAC,GAAQ,MAAK,CACpCpB,MAAO,SAAAqB,GACH,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzBJ,EAAS,CAAEjC,KAAMsC,IAAeC,QAAS,CAAEL,SAAQE,UAASC,eAGpElB,aAAc,SAAAH,GACViB,EAAS,CAAEjC,KAAMwC,IAAexB,UAEpCQ,WAAY,SAAAE,GACRO,EAAS,CAAEjC,KAAMyC,IAAYf,aAKtBK,CAA6CrB","file":"static/js/5.d666913c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Form, Icon, Input, Button\n} from 'antd';\n\nclass LoginForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        this.props.onLogin(values)\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: '请输入邮箱!' }],\n          })(\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: '请输入密码!' }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            登录\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedLoginForm = Form.create({ name: 'login' })(LoginForm);\n\nexport default WrappedLoginForm","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LoginForm from './LoginForm';\nimport { message } from 'antd';\nimport { FETCH_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL } from '@/actions/ActionTypes'\nimport { setCookie } from '@/util/cookie'\nimport './login.less';\n\nclass Login extends Component {\n    onLogin = (values) => {\n        const { email, password } = values;\n        this.props.login({\n            url: '/users/login',\n            method: 'post',\n            data: {\n                email,\n                password\n            }\n        }).then((data) => {\n            if (data.status === \"OK\") {\n                this.props.loginSuccess(data.userInfo)\n                setCookie({ email, password })\n                this.props.history.push('/main/dashboard')\n            } else {\n                this.props.loginError(data)\n                message.error(data.msg || '登录失败');\n            }\n        }).catch(error => {\n            this.props.loginError(error)\n            message.error(error.msg || '登录失败');\n        });\n    }\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"login-header\">\n                    <div className=\"login-header-logo\">\n                        后台管理系统\n                    </div>\n                </div>\n                <div className=\"login-body\">\n                    <LoginForm onLogin={this.onLogin} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = dispatch => ({\n    login: config => {\n        return new Promise((resolve, reject) => {\n            dispatch({ type: FETCH_REQUEST, payload: { config, resolve, reject } });\n        })\n    },\n    loginSuccess: data => {\n        dispatch({ type: LOGIN_SUCCESS, data })\n    },\n    loginError: error => {\n        dispatch({ type: LOGIN_FAIL, error })\n    }\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"sourceRoot":""}