{"version":3,"sources":["pages/login/LoginForm.js"],"names":["LoginForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","onLogin","getFieldDecorator","this","react__WEBPACK_IMPORTED_MODULE_13___default","a","createElement","antd_es_form__WEBPACK_IMPORTED_MODULE_3__","onSubmit","className","Item","rules","required","message","antd_es_input__WEBPACK_IMPORTED_MODULE_5__","prefix","antd_es_icon__WEBPACK_IMPORTED_MODULE_7__","type","style","color","placeholder","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","htmlType","Component","WrappedLoginForm","create","name"],"mappings":"iOAKMA,6MACJC,aAAe,SAACC,GACdA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,eAAe,SAACC,EAAKC,GAC9BD,IACHE,QAAQC,IAAI,4BAA6BF,GACzCL,EAAKC,MAAMO,QAAQH,+EAKhB,IACCI,EAAsBC,KAAKT,MAAMC,KAAjCO,kBACR,OACEE,EAAAC,EAAAC,cAAAC,EAAA,GAAMC,SAAUL,KAAKb,aAAcmB,UAAU,cAC3CL,EAAAC,EAAAC,cAAAC,EAAA,EAAMG,KAAN,KACGR,EAAkB,QAAS,CAC1BS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCADpCX,CAGCE,EAAAC,EAAAC,cAAAQ,EAAA,GAAOC,OAAQX,EAAAC,EAAAC,cAAAU,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAAyBC,YAAY,YAG1FhB,EAAAC,EAAAC,cAAAC,EAAA,EAAMG,KAAN,KACGR,EAAkB,WAAY,CAC7BS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCADpCX,CAGCE,EAAAC,EAAAC,cAAAQ,EAAA,GAAOC,OAAQX,EAAAC,EAAAC,cAAAU,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAAyBF,KAAK,WAAWG,YAAY,eAG1GhB,EAAAC,EAAAC,cAAAC,EAAA,EAAMG,KAAN,KACEN,EAAAC,EAAAC,cAAAe,EAAA,GAAQJ,KAAK,UAAUK,SAAS,SAASb,UAAU,qBAAnD,yBA9Bcc,aAuClBC,EAAmBjB,EAAA,EAAKkB,OAAO,CAAEC,KAAM,SAApBnB,CAA+BlB,GAEzCmC","file":"static/js/20.85d5c286.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Form, Icon, Input, Button\n} from 'antd';\n\nclass LoginForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        this.props.onLogin(values)\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: '请输入邮箱!' }],\n          })(\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: '请输入密码!' }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            登录\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedLoginForm = Form.create({ name: 'login' })(LoginForm);\n\nexport default WrappedLoginForm"],"sourceRoot":""}